include(BundleUtilities)

# Make it so BundleUtilities treats files in /Library/Frameworks as "system"
# This means that they shouldn't be copied into the bundle.
function(gp_resolved_file_type_override resolved_file type_var)
  if(file MATCHES "^/Library/Frameworks/" OR file MATCHES "R.dll")
    set(${type_var} system PARENT_SCOPE)
    if(file MATCHES "R.framework")
      string(REGEX REPLACE "[0-9]+\\.[0-9]+" "Current" resolved_file "${file}")
      set (resolved_file ${resolved_file} PARENT_SCOPE)
    endif()
  endif()
endfunction()

# This is a project-specific override of BundleUtilities.cmake's
# gp_item_default_embedded_path
#
# Its purpose in Visomics is to put the Qt plugins in the proper
# subdirectory.
function(gp_item_default_embedded_path_override item default_embedded_path_var)
  # By default, embed items as set by gp_item_default_embedded_path:
  set(path "${${default_embedded_path_var}}")

  # For Visomics, embed libq* in the plugins folder:
  if(item MATCHES "^libq")
    set(path "@executable_path/../plugins/imageformats")
  endif(item MATCHES "^libq")

  set(${default_embedded_path_var} "${path}" PARENT_SCOPE)
endfunction(gp_item_default_embedded_path_override)


# Set up Qt plugins that fixup_bundle needs to know about.
set(Qt_plugins "")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qgif_plugin@")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qico_plugin@")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qjpeg_plugin@")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qmng_plugin@")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qsvg_plugin@")
list(APPEND Qt_plugins "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@plugin_path@/@qtiff_plugin@")


# Fixup that bundle!
set(apps "@APP@")
foreach(app ${apps})
  fixup_bundle(
    "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/${app}"
    "${Qt_plugins}"
    "@QT_LIBRARY_DIR@;@VTK_DIR@/lib"
  )
endforeach()

if(APPLE)
  # Fix reference to R to be less picky about version
  set(exe_path "$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/@APP@/Contents/Resources/@APP_NAME@-real")

  execute_process(
    COMMAND "otool" "-L" "${exe_path}"
    OUTPUT_VARIABLE otool_output
  )
  string(REPLACE "\n" ";" otool_output ${otool_output})
  set(otool_output ${otool_output})
  set(install_name_tool_cmd "install_name_tool")

  foreach(otool_line ${otool_output})
    if(otool_line MATCHES "R.framework")
      # Trim leading whitespace
      string(STRIP "${otool_line}" otool_line)

      # Remove " (compatibility ...)" from the end of the line
      string(REGEX REPLACE " \\(compat.*\\)" "" otool_line "${otool_line}")

      # Generate arguments for install_name_tool
      list(APPEND install_name_tool_cmd  "-change")
      list(APPEND install_name_tool_cmd "${otool_line}")
      string(REGEX REPLACE "[0-9]+\\.[0-9]+" "Current" otool_line "${otool_line}")
      list(APPEND install_name_tool_cmd "${otool_line}")
    endif()
  endforeach()

  list(APPEND install_name_tool_cmd "${exe_path}")
  execute_process(COMMAND ${install_name_tool_cmd})
endif()
